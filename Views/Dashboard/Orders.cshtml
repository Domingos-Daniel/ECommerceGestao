@model IEnumerable<ECommerceGestao.Models.Order>

@{
    ViewData["Title"] = "Gerenciar Pedidos";
}

<div class="container-fluid mt-4">
    <h1 class="mb-4">Gerenciamento de Pedidos</h1>

    <div class="card">
        <div class="card-header">
            <div class="row">
                <div class="col-md-6">
                    <input type="text" id="orderSearch" class="form-control" placeholder="Pesquisar pedidos por ID ou cliente...">
                </div>
                <div class="col-md-3">
                    <select id="statusFilter" class="form-select">
                        <option value="">Todos Status</option>
                        <option value="Pending">Pendente</option>
                        <option value="Processing">Em Processamento</option>
                        <option value="Shipped">Enviado</option>
                        <option value="Delivered">Entregue</option>
                        <option value="Cancelled">Cancelado</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select id="dateFilter" class="form-select">
                        <option value="">Todas Datas</option>
                        <option value="today">Hoje</option>
                        <option value="week">Esta Semana</option>
                        <option value="month">Este Mês</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover" id="ordersTable">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Cliente</th>
                            <th>Data</th>
                            <th>Valor</th>
                            <th>Status</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr data-date="@order.OrderDate.ToString("yyyy-MM-dd")">
                                <td>@order.Id</td>
                                <td>@order.User.Name</td>
                                <td>@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>R$ @order.TotalAmount.ToString("N2")</td>
                                <td>
                                    <span class="badge bg-@(order.Status == "Delivered" ? "success" : 
                                                         order.Status == "Cancelled" ? "danger" : 
                                                         order.Status == "Processing" ? "primary" : 
                                                         order.Status == "Shipped" ? "info" : "warning")">
                                        @order.Status
                                    </span>
                                </td>
                                <td>
                                    <a asp-action="OrderDetails" asp-route-id="@order.Id" class="btn btn-sm btn-primary">
                                        <i class="bi bi-eye"></i> Detalhes
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Search functionality
        document.getElementById('orderSearch').addEventListener('input', function() {
            const searchValue = this.value.toLowerCase();
            const rows = document.querySelectorAll('#ordersTable tbody tr');
            
            rows.forEach(row => {
                const orderId = row.children[0].textContent.toLowerCase();
                const customer = row.children[1].textContent.toLowerCase();
                
                if (orderId.includes(searchValue) || customer.includes(searchValue)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });
        
        // Status filter
        document.getElementById('statusFilter').addEventListener('change', function() {
            const filterValue = this.value;
            const rows = document.querySelectorAll('#ordersTable tbody tr');
            
            if (filterValue === '') {
                rows.forEach(row => row.style.display = '');
                return;
            }
            
            rows.forEach(row => {
                const statusElement = row.children[4].querySelector('.badge');
                const status = statusElement.textContent.trim();
                
                if (status === filterValue) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });
        
        // Date filter
        document.getElementById('dateFilter').addEventListener('change', function() {
            const filterValue = this.value;
            const rows = document.querySelectorAll('#ordersTable tbody tr');
            
            if (filterValue === '') {
                rows.forEach(row => row.style.display = '');
                return;
            }
            
            const today = new Date();
            today.setHours(0, 0, 0, 0);
            
            const weekStart = new Date(today);
            weekStart.setDate(today.getDate() - today.getDay());
            
            const monthStart = new Date(today.getFullYear(), today.getMonth(), 1);
            
            rows.forEach(row => {
                const orderDate = new Date(row.getAttribute('data-date'));
                
                switch(filterValue) {
                    case 'today':
                        row.style.display = (orderDate >= today) ? '' : 'none';
                        break;
                    case 'week':
                        row.style.display = (orderDate >= weekStart) ? '' : 'none';
                        break;
                    case 'month':
                        row.style.display = (orderDate >= monthStart) ? '' : 'none';
                        break;
                }
            });
        });
    </script>
}
